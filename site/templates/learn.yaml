en:
  tands_learn1: '<p>Tell-and-Show has two parts to the project. The first part is the data to model component, what we call the <b>training</b> part and it is currently ongoing.</p> <p>The second part, the <b>production</b> component is planned and designed, waiting for the training part to deliver base models.</p> <p>We also have <a href="technical_$LANG$.html">a technical write-up</a>.</p>'
  training: Training
  training_blob: '<p>Most recommendation system use <a href="https://en.wikipedia.org/wiki/Collaborative_filtering">Collaborative-Filtering (CF)</a>, a technique where large datasets of preferences by different users over a set of items are recorded (a <i>preference matrix</i>). CF algorithms use the preference matrix to suggest new items based, for example, on the similarity between two users (e.g., if you liked similar items as User 712, CF will suggest you other items possibly unknown to you that User 712 really enjoyed).</p> <p>In Tell-and-Show we are taking a different approach based on <i>textual descriptions</i> of items and a trained preference text metric. In general, it is possible to tell whether two short pieces of text are similar in meaning (for example, using <a href="https://en.wikipedia.org/wiki/Word_embedding">word embeddings</a>). Tell-and-Show goes one step further: our model assesses whether two item descriptions will be both liked or disliked given their differences in meaning. For example, if a user has a preference for items described as:</p><blockquote><i>blue Japanese car</i></blockquote><p>and a new item is described as</p><blockquote><i>blue American car</i></blockquote> <p>and another described as</p> <blockquote><i>green Japanese car</i></blockquote>a text-based distance will say both texts are equally similar but Tell-and-Show preference metric will say they are not because color is less important than make (in the case of cars). (See <a href="technical_$LANG$.html">here</a> for technical details.) This preference model is trained from preference data submitted by volunteers like yourself.</p>'
  production: Production
  production_blob: '<p>Given a trained function that produces a preference vector for text descriptions, it possible to <a href="technical_$LANG$.html">map</a> a large set of item descriptions (e.g., <a href="https://commons.wikimedia.org/wiki/Main_Page">Wikimedia Commons</a>) and find central items to the map. A person preferences over these items constitue their <b>preference profile</b>. It is not just preferences over random items, but over items that are example of large classes and can be used to assess new items later on.</p> <p>This preference profile is very private and we believe it should not be shared with third parties, just kept in the user''s device at all times.</p> <p>When it comes the time to <b>use</b> the preference profile, a server sends a random set of items (what we call the <a href="technical_$LANG$.html">BucketAPI</a>) that the web browser ranks client-side using the preference profile. The ranking is done as follows: items more similar to items in the preference profile that the user liked should rank higher (and viceversa for items the user did not like). Other rankings are possible, allowing the user to switch between discovery and just-on-target recommendations.</p>'
es:
  tands_learn1: '<p>Tell-and-Show es un proyecto en dos partes. La primera parte es el componente que va de datos a model, lo que llamamos la parte de <b>entrenamiento</b> y está ya empezada.</p> <p>La segunda parte, el componente de <b>producción</b> está planeado y diseñado, a la espera que la parte de entrenamiento produzca los primeros modelos.</p> <p>Tenemos también un <a href="technical_$LANG$.html">escrito con detalles técnicos</a>.</p>'
  training: Entrenamiento
  training_blob: '<p>La gran mayoría de los sistemas de recomendación usan <a href="https://en.wikipedia.org/wiki/Collaborative_filtering">Collaborative-Filtering (CF)</a>, una técnica donde grandes conjuntos de datos de preferencias de distintas personas contra un conjunto de ítems determinado (lo que se conoce como una <i>matriz de preferencias</i>). Los algoritmos CF usan la matriz de preferencia para sugerir nuevos ítems usando, por ejemplo, similitudes entre personas (es decir, si a Ud. le han gustado ítems similares a los ítems que le han gustado a la persona 712, entonces CF le sugerirá ítems que Ud. desconoce pero que le han gustado a la person 712).</p> <p>En Tell-and-Show estamos usando un método distinto basados en <i>descripciones textuales</i> de los ítems junto con una métrica de preferencias entrenada específicamente. En general, es posible decidir si dos textos cortos significan lo mismo (usando, por ejemplo, tecnicas de <a href="https://en.wikipedia.org/wiki/Word_embedding">embeddings de texto</a>). Tell-and-Show da un paso más: nuestro modelo decide si dos descripciones de ítems serán ambas gustadas o no gustadas dadas sus diferencias en significado. Por ejemplo, si una persona ha indicado preferencias por ítems descritos como:</p><blockquote><i>auto japonés azul</i></blockquote><p>y tenemos un nuevo ítem descrito como</p><blockquote><i>auto estadounidense azul</i></blockquote> <p>y otro descrito como</p> <blockquote><i>auto japonés verde</i></blockquote>una distancia basadaen texto dirá que ambos textos son igualmente similares pero la métrica de preferencias de Tell-and-Show dirá que no lo son porque el color es menos importante que la procedencia (en el caso de los autos). Vea <a href="technical_$LANG$.html">aquí</a> para detalles técnicos.) Este modelo de preferencias está entrenado sobre preferencias enviadas por gente voluntaria tales como Ud.</p>'
  production: Producción
  production_blob: '<p>Dado el modelo que produce vectores de preferencias a partir de descripciones textuales, es entonces posible <a href="technical_$LANG$.html">mapear</a> un conjunto grande de descripciones de ítems (e.g., <a href="https://commons.wikimedia.org/wiki/Main_Page">Wikimedia Commons</a>) y encontrar ítems centrales en el mapa. Las preferencias sobre dichos ítems de una persona constituyen entonces su  <b>perfil de preferencias</b>. No son simplemente preferencias sobre ítems al azar, pero sobre ítems representativos de grandes clases y es por eso que pueden ser usados para rankear otros ítems más adelante.</p> <p>Este perfil de preferencias es privado y creemos que debe ser mantenido de forma confidencial, sin ser compartido con terceros. Debe permanecer en los dispositivos electrónicos en todo momento.</p> <p>Cuando es el momento de <b>usar</b> el perfil de preferencias, el servidor envía un grupo al azar de ítems (usando lo que denominamos <a href="technical_$LANG$.html">API de Bucket</a>) que luego el navegador web rankea dentro de la página usando el perfil de preferencias. Este ranking se calcula de la siguiente forma: los ítems más similares a los ítems que han sido gustados en el perfil de preferencia rankean más alto (y viceversa los ítems no gustados rankean más bajo). Otros rankings son posibles, permitiendole a Ud. cambiar el comportamiento de recomendaciones certeras a explorar nuevas posibilidades.</p>'
  
  
